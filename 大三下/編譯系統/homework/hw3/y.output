Rules useless in parser due to conflicts

   33 DeclarationStmt: LET ID ':' Type


State 39 conflicts: 2 shift/reduce
State 66 conflicts: 2 shift/reduce
State 67 conflicts: 2 shift/reduce
State 78 conflicts: 2 shift/reduce
State 170 conflicts: 2 shift/reduce
State 183 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: GlobalStatementList

    2 GlobalStatementList: GlobalStatementList GlobalStatement
    3                    | GlobalStatement

    4 GlobalStatement: FunctionDeclStmt
    5                | NEWLINE

    6 $@1: %empty

    7 $@2: %empty

    8 FunctionDeclStmt: FuncOpen '(' $@1 ParameterList ')' ARROW Type $@2 FuncBlock

    9 $@3: %empty

   10 FunctionDeclStmt: FuncOpen '(' ')' $@3 FuncBlock

   11 FuncOpen: FUNC ID

   12 ParameterList: ParameterList ',' ID ':' Type
   13              | ID ':' Type

   14 FuncBlock: '{' NEWLINE StatementList '}'

   15 StatementList: Statement
   16              | Statement StatementList

   17 Statement: Block NEWLINE
   18          | DeclarationStmt ';' NEWLINE
   19          | ExpressionStmt
   20          | AssignmentStmt ';' NEWLINE
   21          | IFStmt
   22          | PrintStmt ';' NEWLINE
   23          | WhileStmt NEWLINE
   24          | ForStmt NEWLINE
   25          | CallFunction NEWLINE
   26          | NEWLINE

   27 CallFunction: ID '(' ')' ';'

   28 Block: StartBlock RETURN Literal ';' NEWLINE '}'
   29      | StartBlock StatementList '}'
   30      | StartBlock BREAK Literal ';' NEWLINE '}'

   31 $@4: %empty

   32 StartBlock: '{' $@4 NEWLINE

   33 DeclarationStmt: LET ID ':' Type
   34                | LET MUT ID ':' Type
   35                | LET ID ':' Type '=' StatementList
   36                | LET MUT ID ':' Type '=' ExpressionStmt
   37                | LET ID ':' DeclareArrayStmt '=' ExpressionStmt
   38                | LET MUT ID '=' ExpressionStmt
   39                | LET ID '=' Literal
   40                | LET ID ':' Type '=' LoopStmt

   41 $@5: %empty

   42 $@6: %empty

   43 AssignmentStmt: ExpressionStmt $@5 assign_op $@6 ExpressionStmt

   44 IFStmt: IFOpen NEWLINE

   45 $@7: %empty

   46 IFStmt: IFOpen NEWLINE ELSE $@7 Block

   47 $@8: %empty

   48 IFStmt: IFOpen ELSE $@8 Block

   49 $@9: %empty

   50 IFOpen: IF ExpressionStmt $@9 Block

   51 PrintStmt: PRINT '(' NEWLINE ExpressionStmt NEWLINE ')'
   52          | PRINT '(' ExpressionStmt ')'
   53          | PRINTLN '(' ExpressionStmt ')'

   54 $@10: %empty

   55 $@11: %empty

   56 WhileStmt: WHILE $@10 ExpressionStmt $@11 Block

   57 $@12: %empty

   58 $@13: %empty

   59 ForStmt: FOR ID IN ID $@12 StartBlock $@13 StatementList '}'

   60 LoopStmt: LOOP Block

   61 DeclareArrayStmt: '[' DeclareArrayStmt ']'
   62                 | Type ';' Literal

   63 ExpressionStmt: LogicalORExpr

   64 LogicalORExpr: LogicalANDExpr LOR LogicalANDExpr
   65              | LogicalANDExpr

   66 LogicalANDExpr: ComparisonExpr LAND ComparisonExpr
   67               | ComparisonExpr

   68 ComparisonExpr: AdditionExpr cmp_op AdditionExpr
   69               | AdditionExpr

   70 AdditionExpr: MultiplicationExpr add_op MultiplicationExpr
   71             | AdditionExpr add_op MultiplicationExpr
   72             | MultiplicationExpr

   73 MultiplicationExpr: UnaryExpr mul_op UnaryExpr
   74                   | UnaryExpr shift_op UnaryExpr
   75                   | UnaryExpr

   76 UnaryExpr: unary_op UnaryExpr
   77          | ArrayExpr
   78          | Operand

   79 ArrayExpr: Literal ',' ArrayExpr
   80          | '[' Literal ',' ArrayExpr
   81          | Literal ']'

   82 $@14: %empty

   83 ArrayExpr: '&' ID $@14 '[' DotExpr ']'

   84 $@15: %empty

   85 DotExpr: DOTDOT $@15 Literal
   86        | DOtOpen

   87 $@16: %empty

   88 DotExpr: DOtOpen $@16 Literal

   89 DOtOpen: Literal DOTDOT

   90 Operand: Literal

   91 $@17: %empty

   92 Operand: Literal AS $@17 Type
   93        | ID
   94        | '(' ExpressionStmt ')'
   95        | ID '[' INT_LIT ']'

   96 $@18: %empty

   97 Operand: ID AS $@18 Type
   98        | ID '(' ID ',' ID ')'

   99 Literal: INT_LIT
  100        | FLOAT_LIT
  101        | '"' STRING_LIT '"'
  102        | '"' '"'
  103        | TRUE
  104        | FALSE

  105 assign_op: '='
  106          | ADD_ASSIGN
  107          | SUB_ASSIGN
  108          | MUL_ASSIGN
  109          | DIV_ASSIGN
  110          | REM_ASSIGN

  111 cmp_op: EQL
  112       | NEQ
  113       | '<'
  114       | LEQ
  115       | '>'
  116       | GEQ

  117 add_op: '+'
  118       | '-'

  119 mul_op: '*'
  120       | '/'
  121       | '%'

  122 shift_op: LSHIFT
  123         | RSHIFT

  124 unary_op: '+'
  125         | '-'
  126         | '!'

  127 Type: INT
  128     | FLOAT
  129     | '&' STR
  130     | BOOL


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 126
    '"' (34) 101 102
    '%' (37) 121
    '&' (38) 83 129
    '(' (40) 8 10 27 51 52 53 94 98
    ')' (41) 8 10 27 51 52 53 94 98
    '*' (42) 119
    '+' (43) 117 124
    ',' (44) 12 79 80 98
    '-' (45) 118 125
    '/' (47) 120
    ':' (58) 12 13 33 34 35 36 37 40
    ';' (59) 18 20 22 27 28 30 62
    '<' (60) 113
    '=' (61) 35 36 37 38 39 40 105
    '>' (62) 115
    '[' (91) 61 80 83 95
    ']' (93) 61 81 83 95
    '{' (123) 14 32
    '}' (125) 14 28 29 30 59
    error (256)
    LET (258) 33 34 35 36 37 38 39 40
    MUT (259) 34 36 38
    NEWLINE (260) 5 14 17 18 20 22 23 24 25 26 28 30 32 44 46 51
    INT (261) 127
    FLOAT (262) 128
    BOOL (263) 130
    STR (264) 129
    TRUE (265) 103
    FALSE (266) 104
    GEQ (267) 116
    LEQ (268) 114
    EQL (269) 111
    NEQ (270) 112
    LOR (271) 64
    LAND (272) 66
    ADD_ASSIGN (273) 106
    SUB_ASSIGN (274) 107
    MUL_ASSIGN (275) 108
    DIV_ASSIGN (276) 109
    REM_ASSIGN (277) 110
    IF (278) 50
    ELSE (279) 46 48
    FOR (280) 59
    WHILE (281) 56
    LOOP (282) 60
    PRINT (283) 51 52
    PRINTLN (284) 53
    FUNC (285) 11
    RETURN (286) 28
    BREAK (287) 30
    ID (288) 11 12 13 27 33 34 35 36 37 38 39 40 59 83 93 95 97 98
    ARROW (289) 8
    AS (290) 92 97
    IN (291) 59
    DOTDOT (292) 85 89
    RSHIFT (293) 123
    LSHIFT (294) 122
    INT_LIT <i_val> (295) 95 99
    FLOAT_LIT <f_val> (296) 100
    STRING_LIT <s_val> (297) 101


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    Program (64)
        on left: 1
        on right: 0
    GlobalStatementList (65)
        on left: 2 3
        on right: 1 2
    GlobalStatement (66)
        on left: 4 5
        on right: 2 3
    FunctionDeclStmt (67)
        on left: 8 10
        on right: 4
    $@1 (68)
        on left: 6
        on right: 8
    $@2 (69)
        on left: 7
        on right: 8
    $@3 (70)
        on left: 9
        on right: 10
    FuncOpen <s_val> (71)
        on left: 11
        on right: 8 10
    ParameterList (72)
        on left: 12 13
        on right: 8 12
    FuncBlock (73)
        on left: 14
        on right: 8 10
    StatementList (74)
        on left: 15 16
        on right: 14 16 29 35 59
    Statement (75)
        on left: 17 18 19 20 21 22 23 24 25 26
        on right: 15 16
    CallFunction (76)
        on left: 27
        on right: 25
    Block (77)
        on left: 28 29 30
        on right: 17 46 48 50 56 60
    StartBlock (78)
        on left: 32
        on right: 28 29 30 59
    $@4 (79)
        on left: 31
        on right: 32
    DeclarationStmt (80)
        on left: 33 34 35 36 37 38 39 40
        on right: 18
    AssignmentStmt (81)
        on left: 43
        on right: 20
    $@5 (82)
        on left: 41
        on right: 43
    $@6 (83)
        on left: 42
        on right: 43
    IFStmt (84)
        on left: 44 46 48
        on right: 21
    $@7 (85)
        on left: 45
        on right: 46
    $@8 (86)
        on left: 47
        on right: 48
    IFOpen (87)
        on left: 50
        on right: 44 46 48
    $@9 (88)
        on left: 49
        on right: 50
    PrintStmt (89)
        on left: 51 52 53
        on right: 22
    WhileStmt (90)
        on left: 56
        on right: 23
    $@10 (91)
        on left: 54
        on right: 56
    $@11 (92)
        on left: 55
        on right: 56
    ForStmt (93)
        on left: 59
        on right: 24
    $@12 (94)
        on left: 57
        on right: 59
    $@13 (95)
        on left: 58
        on right: 59
    LoopStmt (96)
        on left: 60
        on right: 40
    DeclareArrayStmt (97)
        on left: 61 62
        on right: 37 61
    ExpressionStmt <s_val> (98)
        on left: 63
        on right: 19 36 37 38 43 50 51 52 53 56 94
    LogicalORExpr <s_val> (99)
        on left: 64 65
        on right: 63
    LogicalANDExpr <s_val> (100)
        on left: 66 67
        on right: 64 65
    ComparisonExpr <s_val> (101)
        on left: 68 69
        on right: 66 67
    AdditionExpr <s_val> (102)
        on left: 70 71 72
        on right: 68 69 71
    MultiplicationExpr <s_val> (103)
        on left: 73 74 75
        on right: 70 71 72
    UnaryExpr <s_val> (104)
        on left: 76 77 78
        on right: 73 74 75 76
    ArrayExpr <s_val> (105)
        on left: 79 80 81 83
        on right: 77 79 80
    $@14 (106)
        on left: 82
        on right: 83
    DotExpr (107)
        on left: 85 86 88
        on right: 83
    $@15 (108)
        on left: 84
        on right: 85
    $@16 (109)
        on left: 87
        on right: 88
    DOtOpen (110)
        on left: 89
        on right: 86 88
    Operand <s_val> (111)
        on left: 90 92 93 94 95 97 98
        on right: 78
    $@17 (112)
        on left: 91
        on right: 92
    $@18 (113)
        on left: 96
        on right: 97
    Literal <s_val> (114)
        on left: 99 100 101 102 103 104
        on right: 28 30 39 62 79 80 81 85 88 89 90 92
    assign_op <s_val> (115)
        on left: 105 106 107 108 109 110
        on right: 43
    cmp_op <s_val> (116)
        on left: 111 112 113 114 115 116
        on right: 68
    add_op <s_val> (117)
        on left: 117 118
        on right: 70 71
    mul_op <s_val> (118)
        on left: 119 120 121
        on right: 73
    shift_op <s_val> (119)
        on left: 122 123
        on right: 74
    unary_op <s_val> (120)
        on left: 124 125 126
        on right: 76
    Type <s_val> (121)
        on left: 127 128 129 130
        on right: 8 12 13 33 34 35 36 40 62 92 97


State 0

    0 $accept: . Program $end

    NEWLINE  shift, and go to state 1
    FUNC     shift, and go to state 2

    Program              go to state 3
    GlobalStatementList  go to state 4
    GlobalStatement      go to state 5
    FunctionDeclStmt     go to state 6
    FuncOpen             go to state 7


State 1

    5 GlobalStatement: NEWLINE .

    $default  reduce using rule 5 (GlobalStatement)


State 2

   11 FuncOpen: FUNC . ID

    ID  shift, and go to state 8


State 3

    0 $accept: Program . $end

    $end  shift, and go to state 9


State 4

    1 Program: GlobalStatementList .
    2 GlobalStatementList: GlobalStatementList . GlobalStatement

    NEWLINE  shift, and go to state 1
    FUNC     shift, and go to state 2

    $default  reduce using rule 1 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 6
    FuncOpen          go to state 7


State 5

    3 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 6

    4 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 4 (GlobalStatement)


State 7

    8 FunctionDeclStmt: FuncOpen . '(' $@1 ParameterList ')' ARROW Type $@2 FuncBlock
   10                 | FuncOpen . '(' ')' $@3 FuncBlock

    '('  shift, and go to state 11


State 8

   11 FuncOpen: FUNC ID .

    $default  reduce using rule 11 (FuncOpen)


State 9

    0 $accept: Program $end .

    $default  accept


State 10

    2 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 2 (GlobalStatementList)


State 11

    8 FunctionDeclStmt: FuncOpen '(' . $@1 ParameterList ')' ARROW Type $@2 FuncBlock
   10                 | FuncOpen '(' . ')' $@3 FuncBlock

    ')'  shift, and go to state 12

    $default  reduce using rule 6 ($@1)

    $@1  go to state 13


State 12

   10 FunctionDeclStmt: FuncOpen '(' ')' . $@3 FuncBlock

    $default  reduce using rule 9 ($@3)

    $@3  go to state 14


State 13

    8 FunctionDeclStmt: FuncOpen '(' $@1 . ParameterList ')' ARROW Type $@2 FuncBlock

    ID  shift, and go to state 15

    ParameterList  go to state 16


State 14

   10 FunctionDeclStmt: FuncOpen '(' ')' $@3 . FuncBlock

    '{'  shift, and go to state 17

    FuncBlock  go to state 18


State 15

   13 ParameterList: ID . ':' Type

    ':'  shift, and go to state 19


State 16

    8 FunctionDeclStmt: FuncOpen '(' $@1 ParameterList . ')' ARROW Type $@2 FuncBlock
   12 ParameterList: ParameterList . ',' ID ':' Type

    ')'  shift, and go to state 20
    ','  shift, and go to state 21


State 17

   14 FuncBlock: '{' . NEWLINE StatementList '}'

    NEWLINE  shift, and go to state 22


State 18

   10 FunctionDeclStmt: FuncOpen '(' ')' $@3 FuncBlock .

    $default  reduce using rule 10 (FunctionDeclStmt)


State 19

   13 ParameterList: ID ':' . Type

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 24
    BOOL   shift, and go to state 25
    '&'    shift, and go to state 26

    Type  go to state 27


State 20

    8 FunctionDeclStmt: FuncOpen '(' $@1 ParameterList ')' . ARROW Type $@2 FuncBlock

    ARROW  shift, and go to state 28


State 21

   12 ParameterList: ParameterList ',' . ID ':' Type

    ID  shift, and go to state 29


State 22

   14 FuncBlock: '{' NEWLINE . StatementList '}'

    LET        shift, and go to state 30
    NEWLINE    shift, and go to state 31
    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    WHILE      shift, and go to state 36
    PRINT      shift, and go to state 37
    PRINTLN    shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '{'        shift, and go to state 43
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    StatementList       go to state 50
    Statement           go to state 51
    CallFunction        go to state 52
    Block               go to state 53
    StartBlock          go to state 54
    DeclarationStmt     go to state 55
    AssignmentStmt      go to state 56
    IFStmt              go to state 57
    IFOpen              go to state 58
    PrintStmt           go to state 59
    WhileStmt           go to state 60
    ForStmt             go to state 61
    ExpressionStmt      go to state 62
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 23

  127 Type: INT .

    $default  reduce using rule 127 (Type)


State 24

  128 Type: FLOAT .

    $default  reduce using rule 128 (Type)


State 25

  130 Type: BOOL .

    $default  reduce using rule 130 (Type)


State 26

  129 Type: '&' . STR

    STR  shift, and go to state 73


State 27

   13 ParameterList: ID ':' Type .

    $default  reduce using rule 13 (ParameterList)


State 28

    8 FunctionDeclStmt: FuncOpen '(' $@1 ParameterList ')' ARROW . Type $@2 FuncBlock

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 24
    BOOL   shift, and go to state 25
    '&'    shift, and go to state 26

    Type  go to state 74


State 29

   12 ParameterList: ParameterList ',' ID . ':' Type

    ':'  shift, and go to state 75


State 30

   33 DeclarationStmt: LET . ID ':' Type
   34                | LET . MUT ID ':' Type
   35                | LET . ID ':' Type '=' StatementList
   36                | LET . MUT ID ':' Type '=' ExpressionStmt
   37                | LET . ID ':' DeclareArrayStmt '=' ExpressionStmt
   38                | LET . MUT ID '=' ExpressionStmt
   39                | LET . ID '=' Literal
   40                | LET . ID ':' Type '=' LoopStmt

    MUT  shift, and go to state 76
    ID   shift, and go to state 77


State 31

   26 Statement: NEWLINE .

    $default  reduce using rule 26 (Statement)


State 32

  103 Literal: TRUE .

    $default  reduce using rule 103 (Literal)


State 33

  104 Literal: FALSE .

    $default  reduce using rule 104 (Literal)


State 34

   50 IFOpen: IF . ExpressionStmt $@9 Block

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ExpressionStmt      go to state 79
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 35

   59 ForStmt: FOR . ID IN ID $@12 StartBlock $@13 StatementList '}'

    ID  shift, and go to state 80


State 36

   56 WhileStmt: WHILE . $@10 ExpressionStmt $@11 Block

    $default  reduce using rule 54 ($@10)

    $@10  go to state 81


State 37

   51 PrintStmt: PRINT . '(' NEWLINE ExpressionStmt NEWLINE ')'
   52          | PRINT . '(' ExpressionStmt ')'

    '('  shift, and go to state 82


State 38

   53 PrintStmt: PRINTLN . '(' ExpressionStmt ')'

    '('  shift, and go to state 83


State 39

   27 CallFunction: ID . '(' ')' ';'
   93 Operand: ID .
   95        | ID . '[' INT_LIT ']'
   97        | ID . AS $@18 Type
   98        | ID . '(' ID ',' ID ')'

    AS   shift, and go to state 84
    '('  shift, and go to state 85
    '['  shift, and go to state 86

    '('       [reduce using rule 93 (Operand)]
    '['       [reduce using rule 93 (Operand)]
    $default  reduce using rule 93 (Operand)


State 40

   99 Literal: INT_LIT .

    $default  reduce using rule 99 (Literal)


State 41

  100 Literal: FLOAT_LIT .

    $default  reduce using rule 100 (Literal)


State 42

   94 Operand: '(' . ExpressionStmt ')'

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ExpressionStmt      go to state 87
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 43

   32 StartBlock: '{' . $@4 NEWLINE

    $default  reduce using rule 31 ($@4)

    $@4  go to state 88


State 44

   80 ArrayExpr: '[' . Literal ',' ArrayExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '"'        shift, and go to state 46

    Literal  go to state 89


State 45

   83 ArrayExpr: '&' . ID $@14 '[' DotExpr ']'

    ID  shift, and go to state 90


State 46

  101 Literal: '"' . STRING_LIT '"'
  102        | '"' . '"'

    STRING_LIT  shift, and go to state 91
    '"'         shift, and go to state 92


State 47

  124 unary_op: '+' .

    $default  reduce using rule 124 (unary_op)


State 48

  125 unary_op: '-' .

    $default  reduce using rule 125 (unary_op)


State 49

  126 unary_op: '!' .

    $default  reduce using rule 126 (unary_op)


State 50

   14 FuncBlock: '{' NEWLINE StatementList . '}'

    '}'  shift, and go to state 93


State 51

   15 StatementList: Statement .
   16              | Statement . StatementList

    LET        shift, and go to state 30
    NEWLINE    shift, and go to state 31
    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    WHILE      shift, and go to state 36
    PRINT      shift, and go to state 37
    PRINTLN    shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '{'        shift, and go to state 43
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    $default  reduce using rule 15 (StatementList)

    StatementList       go to state 94
    Statement           go to state 51
    CallFunction        go to state 52
    Block               go to state 53
    StartBlock          go to state 54
    DeclarationStmt     go to state 55
    AssignmentStmt      go to state 56
    IFStmt              go to state 57
    IFOpen              go to state 58
    PrintStmt           go to state 59
    WhileStmt           go to state 60
    ForStmt             go to state 61
    ExpressionStmt      go to state 62
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 52

   25 Statement: CallFunction . NEWLINE

    NEWLINE  shift, and go to state 95


State 53

   17 Statement: Block . NEWLINE

    NEWLINE  shift, and go to state 96


State 54

   28 Block: StartBlock . RETURN Literal ';' NEWLINE '}'
   29      | StartBlock . StatementList '}'
   30      | StartBlock . BREAK Literal ';' NEWLINE '}'

    LET        shift, and go to state 30
    NEWLINE    shift, and go to state 31
    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    WHILE      shift, and go to state 36
    PRINT      shift, and go to state 37
    PRINTLN    shift, and go to state 38
    RETURN     shift, and go to state 97
    BREAK      shift, and go to state 98
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '{'        shift, and go to state 43
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    StatementList       go to state 99
    Statement           go to state 51
    CallFunction        go to state 52
    Block               go to state 53
    StartBlock          go to state 54
    DeclarationStmt     go to state 55
    AssignmentStmt      go to state 56
    IFStmt              go to state 57
    IFOpen              go to state 58
    PrintStmt           go to state 59
    WhileStmt           go to state 60
    ForStmt             go to state 61
    ExpressionStmt      go to state 62
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 55

   18 Statement: DeclarationStmt . ';' NEWLINE

    ';'  shift, and go to state 100


State 56

   20 Statement: AssignmentStmt . ';' NEWLINE

    ';'  shift, and go to state 101


State 57

   21 Statement: IFStmt .

    $default  reduce using rule 21 (Statement)


State 58

   44 IFStmt: IFOpen . NEWLINE
   46       | IFOpen . NEWLINE ELSE $@7 Block
   48       | IFOpen . ELSE $@8 Block

    NEWLINE  shift, and go to state 102
    ELSE     shift, and go to state 103


State 59

   22 Statement: PrintStmt . ';' NEWLINE

    ';'  shift, and go to state 104


State 60

   23 Statement: WhileStmt . NEWLINE

    NEWLINE  shift, and go to state 105


State 61

   24 Statement: ForStmt . NEWLINE

    NEWLINE  shift, and go to state 106


State 62

   19 Statement: ExpressionStmt .
   43 AssignmentStmt: ExpressionStmt . $@5 assign_op $@6 ExpressionStmt

    ADD_ASSIGN  reduce using rule 41 ($@5)
    SUB_ASSIGN  reduce using rule 41 ($@5)
    MUL_ASSIGN  reduce using rule 41 ($@5)
    DIV_ASSIGN  reduce using rule 41 ($@5)
    REM_ASSIGN  reduce using rule 41 ($@5)
    '='         reduce using rule 41 ($@5)
    $default    reduce using rule 19 (Statement)

    $@5  go to state 107


State 63

   63 ExpressionStmt: LogicalORExpr .

    $default  reduce using rule 63 (ExpressionStmt)


State 64

   64 LogicalORExpr: LogicalANDExpr . LOR LogicalANDExpr
   65              | LogicalANDExpr .

    LOR  shift, and go to state 108

    $default  reduce using rule 65 (LogicalORExpr)


State 65

   66 LogicalANDExpr: ComparisonExpr . LAND ComparisonExpr
   67               | ComparisonExpr .

    LAND  shift, and go to state 109

    $default  reduce using rule 67 (LogicalANDExpr)


State 66

   68 ComparisonExpr: AdditionExpr . cmp_op AdditionExpr
   69               | AdditionExpr .
   71 AdditionExpr: AdditionExpr . add_op MultiplicationExpr

    GEQ  shift, and go to state 110
    LEQ  shift, and go to state 111
    EQL  shift, and go to state 112
    NEQ  shift, and go to state 113
    '<'  shift, and go to state 114
    '>'  shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117

    '+'       [reduce using rule 69 (ComparisonExpr)]
    '-'       [reduce using rule 69 (ComparisonExpr)]
    $default  reduce using rule 69 (ComparisonExpr)

    cmp_op  go to state 118
    add_op  go to state 119


State 67

   70 AdditionExpr: MultiplicationExpr . add_op MultiplicationExpr
   72             | MultiplicationExpr .

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117

    '+'       [reduce using rule 72 (AdditionExpr)]
    '-'       [reduce using rule 72 (AdditionExpr)]
    $default  reduce using rule 72 (AdditionExpr)

    add_op  go to state 120


State 68

   73 MultiplicationExpr: UnaryExpr . mul_op UnaryExpr
   74                   | UnaryExpr . shift_op UnaryExpr
   75                   | UnaryExpr .

    RSHIFT  shift, and go to state 121
    LSHIFT  shift, and go to state 122
    '*'     shift, and go to state 123
    '/'     shift, and go to state 124
    '%'     shift, and go to state 125

    $default  reduce using rule 75 (MultiplicationExpr)

    mul_op    go to state 126
    shift_op  go to state 127


State 69

   77 UnaryExpr: ArrayExpr .

    $default  reduce using rule 77 (UnaryExpr)


State 70

   78 UnaryExpr: Operand .

    $default  reduce using rule 78 (UnaryExpr)


State 71

   79 ArrayExpr: Literal . ',' ArrayExpr
   81          | Literal . ']'
   90 Operand: Literal .
   92        | Literal . AS $@17 Type

    AS   shift, and go to state 128
    ','  shift, and go to state 129
    ']'  shift, and go to state 130

    $default  reduce using rule 90 (Operand)


State 72

   76 UnaryExpr: unary_op . UnaryExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    UnaryExpr  go to state 131
    ArrayExpr  go to state 69
    Operand    go to state 70
    Literal    go to state 71
    unary_op   go to state 72


State 73

  129 Type: '&' STR .

    $default  reduce using rule 129 (Type)


State 74

    8 FunctionDeclStmt: FuncOpen '(' $@1 ParameterList ')' ARROW Type . $@2 FuncBlock

    $default  reduce using rule 7 ($@2)

    $@2  go to state 132


State 75

   12 ParameterList: ParameterList ',' ID ':' . Type

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 24
    BOOL   shift, and go to state 25
    '&'    shift, and go to state 26

    Type  go to state 133


State 76

   34 DeclarationStmt: LET MUT . ID ':' Type
   36                | LET MUT . ID ':' Type '=' ExpressionStmt
   38                | LET MUT . ID '=' ExpressionStmt

    ID  shift, and go to state 134


State 77

   33 DeclarationStmt: LET ID . ':' Type
   35                | LET ID . ':' Type '=' StatementList
   37                | LET ID . ':' DeclareArrayStmt '=' ExpressionStmt
   39                | LET ID . '=' Literal
   40                | LET ID . ':' Type '=' LoopStmt

    ':'  shift, and go to state 135
    '='  shift, and go to state 136


State 78

   93 Operand: ID .
   95        | ID . '[' INT_LIT ']'
   97        | ID . AS $@18 Type
   98        | ID . '(' ID ',' ID ')'

    AS   shift, and go to state 84
    '('  shift, and go to state 137
    '['  shift, and go to state 86

    '('       [reduce using rule 93 (Operand)]
    '['       [reduce using rule 93 (Operand)]
    $default  reduce using rule 93 (Operand)


State 79

   50 IFOpen: IF ExpressionStmt . $@9 Block

    $default  reduce using rule 49 ($@9)

    $@9  go to state 138


State 80

   59 ForStmt: FOR ID . IN ID $@12 StartBlock $@13 StatementList '}'

    IN  shift, and go to state 139


State 81

   56 WhileStmt: WHILE $@10 . ExpressionStmt $@11 Block

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ExpressionStmt      go to state 140
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 82

   51 PrintStmt: PRINT '(' . NEWLINE ExpressionStmt NEWLINE ')'
   52          | PRINT '(' . ExpressionStmt ')'

    NEWLINE    shift, and go to state 141
    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ExpressionStmt      go to state 142
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 83

   53 PrintStmt: PRINTLN '(' . ExpressionStmt ')'

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ExpressionStmt      go to state 143
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 84

   97 Operand: ID AS . $@18 Type

    $default  reduce using rule 96 ($@18)

    $@18  go to state 144


State 85

   27 CallFunction: ID '(' . ')' ';'
   98 Operand: ID '(' . ID ',' ID ')'

    ID   shift, and go to state 145
    ')'  shift, and go to state 146


State 86

   95 Operand: ID '[' . INT_LIT ']'

    INT_LIT  shift, and go to state 147


State 87

   94 Operand: '(' ExpressionStmt . ')'

    ')'  shift, and go to state 148


State 88

   32 StartBlock: '{' $@4 . NEWLINE

    NEWLINE  shift, and go to state 149


State 89

   80 ArrayExpr: '[' Literal . ',' ArrayExpr

    ','  shift, and go to state 150


State 90

   83 ArrayExpr: '&' ID . $@14 '[' DotExpr ']'

    $default  reduce using rule 82 ($@14)

    $@14  go to state 151


State 91

  101 Literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 152


State 92

  102 Literal: '"' '"' .

    $default  reduce using rule 102 (Literal)


State 93

   14 FuncBlock: '{' NEWLINE StatementList '}' .

    $default  reduce using rule 14 (FuncBlock)


State 94

   16 StatementList: Statement StatementList .

    $default  reduce using rule 16 (StatementList)


State 95

   25 Statement: CallFunction NEWLINE .

    $default  reduce using rule 25 (Statement)


State 96

   17 Statement: Block NEWLINE .

    $default  reduce using rule 17 (Statement)


State 97

   28 Block: StartBlock RETURN . Literal ';' NEWLINE '}'

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '"'        shift, and go to state 46

    Literal  go to state 153


State 98

   30 Block: StartBlock BREAK . Literal ';' NEWLINE '}'

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '"'        shift, and go to state 46

    Literal  go to state 154


State 99

   29 Block: StartBlock StatementList . '}'

    '}'  shift, and go to state 155


State 100

   18 Statement: DeclarationStmt ';' . NEWLINE

    NEWLINE  shift, and go to state 156


State 101

   20 Statement: AssignmentStmt ';' . NEWLINE

    NEWLINE  shift, and go to state 157


State 102

   44 IFStmt: IFOpen NEWLINE .
   46       | IFOpen NEWLINE . ELSE $@7 Block

    ELSE  shift, and go to state 158

    $default  reduce using rule 44 (IFStmt)


State 103

   48 IFStmt: IFOpen ELSE . $@8 Block

    $default  reduce using rule 47 ($@8)

    $@8  go to state 159


State 104

   22 Statement: PrintStmt ';' . NEWLINE

    NEWLINE  shift, and go to state 160


State 105

   23 Statement: WhileStmt NEWLINE .

    $default  reduce using rule 23 (Statement)


State 106

   24 Statement: ForStmt NEWLINE .

    $default  reduce using rule 24 (Statement)


State 107

   43 AssignmentStmt: ExpressionStmt $@5 . assign_op $@6 ExpressionStmt

    ADD_ASSIGN  shift, and go to state 161
    SUB_ASSIGN  shift, and go to state 162
    MUL_ASSIGN  shift, and go to state 163
    DIV_ASSIGN  shift, and go to state 164
    REM_ASSIGN  shift, and go to state 165
    '='         shift, and go to state 166

    assign_op  go to state 167


State 108

   64 LogicalORExpr: LogicalANDExpr LOR . LogicalANDExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    LogicalANDExpr      go to state 168
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 109

   66 LogicalANDExpr: ComparisonExpr LAND . ComparisonExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ComparisonExpr      go to state 169
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 110

  116 cmp_op: GEQ .

    $default  reduce using rule 116 (cmp_op)


State 111

  114 cmp_op: LEQ .

    $default  reduce using rule 114 (cmp_op)


State 112

  111 cmp_op: EQL .

    $default  reduce using rule 111 (cmp_op)


State 113

  112 cmp_op: NEQ .

    $default  reduce using rule 112 (cmp_op)


State 114

  113 cmp_op: '<' .

    $default  reduce using rule 113 (cmp_op)


State 115

  115 cmp_op: '>' .

    $default  reduce using rule 115 (cmp_op)


State 116

  117 add_op: '+' .

    $default  reduce using rule 117 (add_op)


State 117

  118 add_op: '-' .

    $default  reduce using rule 118 (add_op)


State 118

   68 ComparisonExpr: AdditionExpr cmp_op . AdditionExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    AdditionExpr        go to state 170
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 119

   71 AdditionExpr: AdditionExpr add_op . MultiplicationExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    MultiplicationExpr  go to state 171
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 120

   70 AdditionExpr: MultiplicationExpr add_op . MultiplicationExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    MultiplicationExpr  go to state 172
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 121

  123 shift_op: RSHIFT .

    $default  reduce using rule 123 (shift_op)


State 122

  122 shift_op: LSHIFT .

    $default  reduce using rule 122 (shift_op)


State 123

  119 mul_op: '*' .

    $default  reduce using rule 119 (mul_op)


State 124

  120 mul_op: '/' .

    $default  reduce using rule 120 (mul_op)


State 125

  121 mul_op: '%' .

    $default  reduce using rule 121 (mul_op)


State 126

   73 MultiplicationExpr: UnaryExpr mul_op . UnaryExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    UnaryExpr  go to state 173
    ArrayExpr  go to state 69
    Operand    go to state 70
    Literal    go to state 71
    unary_op   go to state 72


State 127

   74 MultiplicationExpr: UnaryExpr shift_op . UnaryExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    UnaryExpr  go to state 174
    ArrayExpr  go to state 69
    Operand    go to state 70
    Literal    go to state 71
    unary_op   go to state 72


State 128

   92 Operand: Literal AS . $@17 Type

    $default  reduce using rule 91 ($@17)

    $@17  go to state 175


State 129

   79 ArrayExpr: Literal ',' . ArrayExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46

    ArrayExpr  go to state 176
    Literal    go to state 177


State 130

   81 ArrayExpr: Literal ']' .

    $default  reduce using rule 81 (ArrayExpr)


State 131

   76 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 76 (UnaryExpr)


State 132

    8 FunctionDeclStmt: FuncOpen '(' $@1 ParameterList ')' ARROW Type $@2 . FuncBlock

    '{'  shift, and go to state 17

    FuncBlock  go to state 178


State 133

   12 ParameterList: ParameterList ',' ID ':' Type .

    $default  reduce using rule 12 (ParameterList)


State 134

   34 DeclarationStmt: LET MUT ID . ':' Type
   36                | LET MUT ID . ':' Type '=' ExpressionStmt
   38                | LET MUT ID . '=' ExpressionStmt

    ':'  shift, and go to state 179
    '='  shift, and go to state 180


State 135

   33 DeclarationStmt: LET ID ':' . Type
   35                | LET ID ':' . Type '=' StatementList
   37                | LET ID ':' . DeclareArrayStmt '=' ExpressionStmt
   40                | LET ID ':' . Type '=' LoopStmt

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 24
    BOOL   shift, and go to state 25
    '['    shift, and go to state 181
    '&'    shift, and go to state 26

    DeclareArrayStmt  go to state 182
    Type              go to state 183


State 136

   39 DeclarationStmt: LET ID '=' . Literal

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '"'        shift, and go to state 46

    Literal  go to state 184


State 137

   98 Operand: ID '(' . ID ',' ID ')'

    ID  shift, and go to state 145


State 138

   50 IFOpen: IF ExpressionStmt $@9 . Block

    '{'  shift, and go to state 43

    Block       go to state 185
    StartBlock  go to state 54


State 139

   59 ForStmt: FOR ID IN . ID $@12 StartBlock $@13 StatementList '}'

    ID  shift, and go to state 186


State 140

   56 WhileStmt: WHILE $@10 ExpressionStmt . $@11 Block

    $default  reduce using rule 55 ($@11)

    $@11  go to state 187


State 141

   51 PrintStmt: PRINT '(' NEWLINE . ExpressionStmt NEWLINE ')'

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ExpressionStmt      go to state 188
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 142

   52 PrintStmt: PRINT '(' ExpressionStmt . ')'

    ')'  shift, and go to state 189


State 143

   53 PrintStmt: PRINTLN '(' ExpressionStmt . ')'

    ')'  shift, and go to state 190


State 144

   97 Operand: ID AS $@18 . Type

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 24
    BOOL   shift, and go to state 25
    '&'    shift, and go to state 26

    Type  go to state 191


State 145

   98 Operand: ID '(' ID . ',' ID ')'

    ','  shift, and go to state 192


State 146

   27 CallFunction: ID '(' ')' . ';'

    ';'  shift, and go to state 193


State 147

   95 Operand: ID '[' INT_LIT . ']'

    ']'  shift, and go to state 194


State 148

   94 Operand: '(' ExpressionStmt ')' .

    $default  reduce using rule 94 (Operand)


State 149

   32 StartBlock: '{' $@4 NEWLINE .

    $default  reduce using rule 32 (StartBlock)


State 150

   80 ArrayExpr: '[' Literal ',' . ArrayExpr

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46

    ArrayExpr  go to state 195
    Literal    go to state 177


State 151

   83 ArrayExpr: '&' ID $@14 . '[' DotExpr ']'

    '['  shift, and go to state 196


State 152

  101 Literal: '"' STRING_LIT '"' .

    $default  reduce using rule 101 (Literal)


State 153

   28 Block: StartBlock RETURN Literal . ';' NEWLINE '}'

    ';'  shift, and go to state 197


State 154

   30 Block: StartBlock BREAK Literal . ';' NEWLINE '}'

    ';'  shift, and go to state 198


State 155

   29 Block: StartBlock StatementList '}' .

    $default  reduce using rule 29 (Block)


State 156

   18 Statement: DeclarationStmt ';' NEWLINE .

    $default  reduce using rule 18 (Statement)


State 157

   20 Statement: AssignmentStmt ';' NEWLINE .

    $default  reduce using rule 20 (Statement)


State 158

   46 IFStmt: IFOpen NEWLINE ELSE . $@7 Block

    $default  reduce using rule 45 ($@7)

    $@7  go to state 199


State 159

   48 IFStmt: IFOpen ELSE $@8 . Block

    '{'  shift, and go to state 43

    Block       go to state 200
    StartBlock  go to state 54


State 160

   22 Statement: PrintStmt ';' NEWLINE .

    $default  reduce using rule 22 (Statement)


State 161

  106 assign_op: ADD_ASSIGN .

    $default  reduce using rule 106 (assign_op)


State 162

  107 assign_op: SUB_ASSIGN .

    $default  reduce using rule 107 (assign_op)


State 163

  108 assign_op: MUL_ASSIGN .

    $default  reduce using rule 108 (assign_op)


State 164

  109 assign_op: DIV_ASSIGN .

    $default  reduce using rule 109 (assign_op)


State 165

  110 assign_op: REM_ASSIGN .

    $default  reduce using rule 110 (assign_op)


State 166

  105 assign_op: '=' .

    $default  reduce using rule 105 (assign_op)


State 167

   43 AssignmentStmt: ExpressionStmt $@5 assign_op . $@6 ExpressionStmt

    $default  reduce using rule 42 ($@6)

    $@6  go to state 201


State 168

   64 LogicalORExpr: LogicalANDExpr LOR LogicalANDExpr .

    $default  reduce using rule 64 (LogicalORExpr)


State 169

   66 LogicalANDExpr: ComparisonExpr LAND ComparisonExpr .

    $default  reduce using rule 66 (LogicalANDExpr)


State 170

   68 ComparisonExpr: AdditionExpr cmp_op AdditionExpr .
   71 AdditionExpr: AdditionExpr . add_op MultiplicationExpr

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117

    '+'       [reduce using rule 68 (ComparisonExpr)]
    '-'       [reduce using rule 68 (ComparisonExpr)]
    $default  reduce using rule 68 (ComparisonExpr)

    add_op  go to state 119


State 171

   71 AdditionExpr: AdditionExpr add_op MultiplicationExpr .

    $default  reduce using rule 71 (AdditionExpr)


State 172

   70 AdditionExpr: MultiplicationExpr add_op MultiplicationExpr .

    $default  reduce using rule 70 (AdditionExpr)


State 173

   73 MultiplicationExpr: UnaryExpr mul_op UnaryExpr .

    $default  reduce using rule 73 (MultiplicationExpr)


State 174

   74 MultiplicationExpr: UnaryExpr shift_op UnaryExpr .

    $default  reduce using rule 74 (MultiplicationExpr)


State 175

   92 Operand: Literal AS $@17 . Type

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 24
    BOOL   shift, and go to state 25
    '&'    shift, and go to state 26

    Type  go to state 202


State 176

   79 ArrayExpr: Literal ',' ArrayExpr .

    $default  reduce using rule 79 (ArrayExpr)


State 177

   79 ArrayExpr: Literal . ',' ArrayExpr
   81          | Literal . ']'

    ','  shift, and go to state 129
    ']'  shift, and go to state 130


State 178

    8 FunctionDeclStmt: FuncOpen '(' $@1 ParameterList ')' ARROW Type $@2 FuncBlock .

    $default  reduce using rule 8 (FunctionDeclStmt)


State 179

   34 DeclarationStmt: LET MUT ID ':' . Type
   36                | LET MUT ID ':' . Type '=' ExpressionStmt

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 24
    BOOL   shift, and go to state 25
    '&'    shift, and go to state 26

    Type  go to state 203


State 180

   38 DeclarationStmt: LET MUT ID '=' . ExpressionStmt

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ExpressionStmt      go to state 204
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 181

   61 DeclareArrayStmt: '[' . DeclareArrayStmt ']'

    INT    shift, and go to state 23
    FLOAT  shift, and go to state 24
    BOOL   shift, and go to state 25
    '['    shift, and go to state 181
    '&'    shift, and go to state 26

    DeclareArrayStmt  go to state 205
    Type              go to state 206


State 182

   37 DeclarationStmt: LET ID ':' DeclareArrayStmt . '=' ExpressionStmt

    '='  shift, and go to state 207


State 183

   33 DeclarationStmt: LET ID ':' Type .
   35                | LET ID ':' Type . '=' StatementList
   40                | LET ID ':' Type . '=' LoopStmt
   62 DeclareArrayStmt: Type . ';' Literal

    ';'  shift, and go to state 208
    '='  shift, and go to state 209

    ';'  [reduce using rule 33 (DeclarationStmt)]


State 184

   39 DeclarationStmt: LET ID '=' Literal .

    $default  reduce using rule 39 (DeclarationStmt)


State 185

   50 IFOpen: IF ExpressionStmt $@9 Block .

    $default  reduce using rule 50 (IFOpen)


State 186

   59 ForStmt: FOR ID IN ID . $@12 StartBlock $@13 StatementList '}'

    $default  reduce using rule 57 ($@12)

    $@12  go to state 210


State 187

   56 WhileStmt: WHILE $@10 ExpressionStmt $@11 . Block

    '{'  shift, and go to state 43

    Block       go to state 211
    StartBlock  go to state 54


State 188

   51 PrintStmt: PRINT '(' NEWLINE ExpressionStmt . NEWLINE ')'

    NEWLINE  shift, and go to state 212


State 189

   52 PrintStmt: PRINT '(' ExpressionStmt ')' .

    $default  reduce using rule 52 (PrintStmt)


State 190

   53 PrintStmt: PRINTLN '(' ExpressionStmt ')' .

    $default  reduce using rule 53 (PrintStmt)


State 191

   97 Operand: ID AS $@18 Type .

    $default  reduce using rule 97 (Operand)


State 192

   98 Operand: ID '(' ID ',' . ID ')'

    ID  shift, and go to state 213


State 193

   27 CallFunction: ID '(' ')' ';' .

    $default  reduce using rule 27 (CallFunction)


State 194

   95 Operand: ID '[' INT_LIT ']' .

    $default  reduce using rule 95 (Operand)


State 195

   80 ArrayExpr: '[' Literal ',' ArrayExpr .

    $default  reduce using rule 80 (ArrayExpr)


State 196

   83 ArrayExpr: '&' ID $@14 '[' . DotExpr ']'

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    DOTDOT     shift, and go to state 214
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '"'        shift, and go to state 46

    DotExpr  go to state 215
    DOtOpen  go to state 216
    Literal  go to state 217


State 197

   28 Block: StartBlock RETURN Literal ';' . NEWLINE '}'

    NEWLINE  shift, and go to state 218


State 198

   30 Block: StartBlock BREAK Literal ';' . NEWLINE '}'

    NEWLINE  shift, and go to state 219


State 199

   46 IFStmt: IFOpen NEWLINE ELSE $@7 . Block

    '{'  shift, and go to state 43

    Block       go to state 220
    StartBlock  go to state 54


State 200

   48 IFStmt: IFOpen ELSE $@8 Block .

    $default  reduce using rule 48 (IFStmt)


State 201

   43 AssignmentStmt: ExpressionStmt $@5 assign_op $@6 . ExpressionStmt

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ExpressionStmt      go to state 221
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 202

   92 Operand: Literal AS $@17 Type .

    $default  reduce using rule 92 (Operand)


State 203

   34 DeclarationStmt: LET MUT ID ':' Type .
   36                | LET MUT ID ':' Type . '=' ExpressionStmt

    '='  shift, and go to state 222

    $default  reduce using rule 34 (DeclarationStmt)


State 204

   38 DeclarationStmt: LET MUT ID '=' ExpressionStmt .

    $default  reduce using rule 38 (DeclarationStmt)


State 205

   61 DeclareArrayStmt: '[' DeclareArrayStmt . ']'

    ']'  shift, and go to state 223


State 206

   62 DeclareArrayStmt: Type . ';' Literal

    ';'  shift, and go to state 208


State 207

   37 DeclarationStmt: LET ID ':' DeclareArrayStmt '=' . ExpressionStmt

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ExpressionStmt      go to state 224
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 208

   62 DeclareArrayStmt: Type ';' . Literal

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '"'        shift, and go to state 46

    Literal  go to state 225


State 209

   35 DeclarationStmt: LET ID ':' Type '=' . StatementList
   40                | LET ID ':' Type '=' . LoopStmt

    LET        shift, and go to state 30
    NEWLINE    shift, and go to state 31
    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    WHILE      shift, and go to state 36
    LOOP       shift, and go to state 226
    PRINT      shift, and go to state 37
    PRINTLN    shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '{'        shift, and go to state 43
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    StatementList       go to state 227
    Statement           go to state 51
    CallFunction        go to state 52
    Block               go to state 53
    StartBlock          go to state 54
    DeclarationStmt     go to state 55
    AssignmentStmt      go to state 56
    IFStmt              go to state 57
    IFOpen              go to state 58
    PrintStmt           go to state 59
    WhileStmt           go to state 60
    ForStmt             go to state 61
    LoopStmt            go to state 228
    ExpressionStmt      go to state 62
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 210

   59 ForStmt: FOR ID IN ID $@12 . StartBlock $@13 StatementList '}'

    '{'  shift, and go to state 43

    StartBlock  go to state 229


State 211

   56 WhileStmt: WHILE $@10 ExpressionStmt $@11 Block .

    $default  reduce using rule 56 (WhileStmt)


State 212

   51 PrintStmt: PRINT '(' NEWLINE ExpressionStmt NEWLINE . ')'

    ')'  shift, and go to state 230


State 213

   98 Operand: ID '(' ID ',' ID . ')'

    ')'  shift, and go to state 231


State 214

   85 DotExpr: DOTDOT . $@15 Literal

    $default  reduce using rule 84 ($@15)

    $@15  go to state 232


State 215

   83 ArrayExpr: '&' ID $@14 '[' DotExpr . ']'

    ']'  shift, and go to state 233


State 216

   86 DotExpr: DOtOpen .
   88        | DOtOpen . $@16 Literal

    ']'       reduce using rule 86 (DotExpr)
    $default  reduce using rule 87 ($@16)

    $@16  go to state 234


State 217

   89 DOtOpen: Literal . DOTDOT

    DOTDOT  shift, and go to state 235


State 218

   28 Block: StartBlock RETURN Literal ';' NEWLINE . '}'

    '}'  shift, and go to state 236


State 219

   30 Block: StartBlock BREAK Literal ';' NEWLINE . '}'

    '}'  shift, and go to state 237


State 220

   46 IFStmt: IFOpen NEWLINE ELSE $@7 Block .

    $default  reduce using rule 46 (IFStmt)


State 221

   43 AssignmentStmt: ExpressionStmt $@5 assign_op $@6 ExpressionStmt .

    $default  reduce using rule 43 (AssignmentStmt)


State 222

   36 DeclarationStmt: LET MUT ID ':' Type '=' . ExpressionStmt

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    ID         shift, and go to state 78
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    ExpressionStmt      go to state 238
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 223

   61 DeclareArrayStmt: '[' DeclareArrayStmt ']' .

    $default  reduce using rule 61 (DeclareArrayStmt)


State 224

   37 DeclarationStmt: LET ID ':' DeclareArrayStmt '=' ExpressionStmt .

    $default  reduce using rule 37 (DeclarationStmt)


State 225

   62 DeclareArrayStmt: Type ';' Literal .

    $default  reduce using rule 62 (DeclareArrayStmt)


State 226

   60 LoopStmt: LOOP . Block

    '{'  shift, and go to state 43

    Block       go to state 239
    StartBlock  go to state 54


State 227

   35 DeclarationStmt: LET ID ':' Type '=' StatementList .

    $default  reduce using rule 35 (DeclarationStmt)


State 228

   40 DeclarationStmt: LET ID ':' Type '=' LoopStmt .

    $default  reduce using rule 40 (DeclarationStmt)


State 229

   59 ForStmt: FOR ID IN ID $@12 StartBlock . $@13 StatementList '}'

    $default  reduce using rule 58 ($@13)

    $@13  go to state 240


State 230

   51 PrintStmt: PRINT '(' NEWLINE ExpressionStmt NEWLINE ')' .

    $default  reduce using rule 51 (PrintStmt)


State 231

   98 Operand: ID '(' ID ',' ID ')' .

    $default  reduce using rule 98 (Operand)


State 232

   85 DotExpr: DOTDOT $@15 . Literal

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '"'        shift, and go to state 46

    Literal  go to state 241


State 233

   83 ArrayExpr: '&' ID $@14 '[' DotExpr ']' .

    $default  reduce using rule 83 (ArrayExpr)


State 234

   88 DotExpr: DOtOpen $@16 . Literal

    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '"'        shift, and go to state 46

    Literal  go to state 242


State 235

   89 DOtOpen: Literal DOTDOT .

    $default  reduce using rule 89 (DOtOpen)


State 236

   28 Block: StartBlock RETURN Literal ';' NEWLINE '}' .

    $default  reduce using rule 28 (Block)


State 237

   30 Block: StartBlock BREAK Literal ';' NEWLINE '}' .

    $default  reduce using rule 30 (Block)


State 238

   36 DeclarationStmt: LET MUT ID ':' Type '=' ExpressionStmt .

    $default  reduce using rule 36 (DeclarationStmt)


State 239

   60 LoopStmt: LOOP Block .

    $default  reduce using rule 60 (LoopStmt)


State 240

   59 ForStmt: FOR ID IN ID $@12 StartBlock $@13 . StatementList '}'

    LET        shift, and go to state 30
    NEWLINE    shift, and go to state 31
    TRUE       shift, and go to state 32
    FALSE      shift, and go to state 33
    IF         shift, and go to state 34
    FOR        shift, and go to state 35
    WHILE      shift, and go to state 36
    PRINT      shift, and go to state 37
    PRINTLN    shift, and go to state 38
    ID         shift, and go to state 39
    INT_LIT    shift, and go to state 40
    FLOAT_LIT  shift, and go to state 41
    '('        shift, and go to state 42
    '{'        shift, and go to state 43
    '['        shift, and go to state 44
    '&'        shift, and go to state 45
    '"'        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '!'        shift, and go to state 49

    StatementList       go to state 243
    Statement           go to state 51
    CallFunction        go to state 52
    Block               go to state 53
    StartBlock          go to state 54
    DeclarationStmt     go to state 55
    AssignmentStmt      go to state 56
    IFStmt              go to state 57
    IFOpen              go to state 58
    PrintStmt           go to state 59
    WhileStmt           go to state 60
    ForStmt             go to state 61
    ExpressionStmt      go to state 62
    LogicalORExpr       go to state 63
    LogicalANDExpr      go to state 64
    ComparisonExpr      go to state 65
    AdditionExpr        go to state 66
    MultiplicationExpr  go to state 67
    UnaryExpr           go to state 68
    ArrayExpr           go to state 69
    Operand             go to state 70
    Literal             go to state 71
    unary_op            go to state 72


State 241

   85 DotExpr: DOTDOT $@15 Literal .

    $default  reduce using rule 85 (DotExpr)


State 242

   88 DotExpr: DOtOpen $@16 Literal .

    $default  reduce using rule 88 (DotExpr)


State 243

   59 ForStmt: FOR ID IN ID $@12 StartBlock $@13 StatementList . '}'

    '}'  shift, and go to state 244


State 244

   59 ForStmt: FOR ID IN ID $@12 StartBlock $@13 StatementList '}' .

    $default  reduce using rule 59 (ForStmt)
